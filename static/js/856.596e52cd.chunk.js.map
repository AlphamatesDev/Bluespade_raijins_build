{"version":3,"file":"static/js/856.596e52cd.chunk.js","mappings":"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","sources":["components/OwnedRaijinsTicketsComp/index.jsx","components/CopyBtn/index.jsx","components/RaffleCard/RaffleCard.jsx","utils/strings.ts","components/RaijinsModal/index.jsx","components/SetNumComp/index.jsx","config/raffles.js","components/Combobox/Combobox.js","components/Raffles/ActiveRaffles.jsx","components/Raffles/Hero.jsx","components/Raffles/RafflesContainer.jsx","components/Raffles/BuyRafflesModal.jsx","components/Raffles/BuyRafflesWaitingModal.jsx","components/Raffles/BuyRafflesCheckModal.jsx","pages/Raffles/index.jsx","lib/approveTokens.tsx"],"sourcesContent":["import cx from \"classnames\";\r\n// import RaijinsTicketImg from \"assets/images/common/RaijinsTicket.png\";\r\nimport \"./index.scss\";\r\n\r\n// ================================================\r\n\r\nconst OwnedRaijinsTicketsComp = ({ raijinsTicketBalance, variant, classes }) => {\r\n  return (\r\n    <div className={cx(\"owned-raijins-tickets-container\", variant, classes)}>\r\n      <h6 className={cx(\"mb-3\")}>your Raijins tickets: <span>{raijinsTicketBalance}</span></h6>\r\n      {/* <div className={cx(\"d-flex\", \"align-center\")}>\r\n        <img src={RaijinsTicketImg} alt=\"RaijinsTicket.png\" />\r\n        <div className={cx(\"owned-raijins-tickets-num\")}>\r\n          <span>{raijinsTicketBalance}</span>\r\n          <br /> owned\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OwnedRaijinsTicketsComp;\r\n","import { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport copy from \"assets/images/ic_copy_16_dark.png\";\r\nimport { helperToast } from \"lib/helperToast\";\r\nimport cx from \"classnames\";\r\nimport \"./index.scss\";\r\n\r\nconst CopyBtn = ({ text, classes }) => {\r\n  return (\r\n    <CopyToClipboard\r\n      text={text}\r\n      onCopy={() =>\r\n        helperToast.success(<p>Address copied to your clipboard</p>)\r\n      }\r\n    >\r\n      <button className={cx(\"copy-btn\", classes)}>\r\n        <img src={copy} alt=\"Copy user address\" width=\"16px\" />\r\n      </button>\r\n    </CopyToClipboard>\r\n  );\r\n};\r\n\r\nexport default CopyBtn;\r\n","import cx from \"classnames\";\r\nimport RoundButton from \"../RoundButton\";\r\nimport \"./RaffleCard.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { formatAddress } from \"../../utils/strings\";\r\nimport { useMemo } from \"react\";\r\nimport CopyBtn from \"../CopyBtn\";\r\n\r\n// ================================================\r\n\r\nconst RaffleCard = ({\r\n  raffle,\r\n  isWalletConnected,\r\n  connectWallet,\r\n  onActionBtn,\r\n  isTopRaffles,\r\n}) => {\r\n  const formattedAddress = useMemo(() => {\r\n    return formatAddress(raffle.winner);\r\n  }, [raffle.winner]);\r\n\r\n  return (\r\n    <div className={cx(\"raffle-card\")}>\r\n      <div className={cx(\"card-media\")}>\r\n        <img src={`${raffle.image}`} alt={raffle.image} width=\"100%\" />\r\n      </div>\r\n      <div className={cx(\"card-content\")}>\r\n        <h5 className={cx(\"title\")} title={raffle.title}>\r\n          {/* {formatRaffleCardTitle(raffle.title)} */}\r\n          {raffle.title}\r\n        </h5>\r\n        <div className={cx(\"content\")}>\r\n          <p className={cx(\"value\")}>\r\n            value: {raffle.value ? raffle.value : \"Not set!\"}\r\n          </p>\r\n          {raffle.ended ? (\r\n            <>\r\n              {raffle.decided ? (\r\n                <>\r\n                  <p className={cx(\"winner\", \"text-center\")}>\r\n                    🏆 winner: {formattedAddress}\r\n                    <CopyBtn text={raffle.winner} classes=\"ml-05\" />\r\n                  </p>\r\n                  <p className={cx(\"remaining-time\", \"text-center\")}>\r\n                    next raffle: <br />\r\n                    {raffle.remainingTimeNextRaffle.days}D{\" \"}\r\n                    {raffle.remainingTimeNextRaffle.hours}\r\n                    {\"H \"}\r\n                    {raffle.remainingTimeNextRaffle.minutes}M\r\n                  </p>\r\n                </>\r\n              ) : (\r\n                <p className={cx(\"winner\", \"text-center\")}>\r\n                  🏆 winner: waiting result...\r\n                </p>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              {\r\n                isWalletConnected ?\r\n                  <>\r\n                    <p className={cx(\"winning-rate\")}>1x ticket winning rate: <span className={cx(\"winning-rate-percentage\")}>{raffle.winningRate1x}%</span></p>\r\n                    \r\n                    <p className={cx(\"winning-rate\")}>your winning rate: <span className={cx(\"winning-rate-percentage\")}>{raffle.winningRate}%</span></p>\r\n                    \r\n                  </>\r\n                  :\r\n                  <>\r\n                    <p className={cx(\"winning-rate\")}>1x ticket winning rate: <span className={cx(\"winning-rate-percentage\")}>{raffle.winningRate1x}%</span></p>\r\n                    \r\n                  </>\r\n              }\r\n              <p className={cx(\"winner\")}>🏆 winner: 1</p>\r\n              <p className={cx(\"remaining-time\")}>\r\n                {raffle.remainingTime.days}D {raffle.remainingTime.hours}\r\n                {\"H \"}\r\n                {raffle.remainingTime.minutes}M left\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {isTopRaffles ? (\r\n        <>\r\n          <div className={cx(\"card-action\")}>\r\n            <Link to=\"/raffles\" className=\"round-btn primary\">\r\n              View\r\n            </Link>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {!raffle.ended ? (\r\n            isWalletConnected ? (\r\n              <div className={cx(\"card-action\")}>\r\n                <RoundButton\r\n                  variant=\"danger\"\r\n                  text=\"buy raffle\"\r\n                  onBtnClick={() => onActionBtn(raffle.id)}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div className={cx(\"card-action\")}>\r\n                <RoundButton\r\n                  variant=\"danger\"\r\n                  text=\"connect wallet\"\r\n                  onBtnClick={connectWallet}\r\n                />\r\n              </div>\r\n            )\r\n          ) : null}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RaffleCard;\r\n","export const formatAddress = (address: String): String => {\r\n  return (\r\n    address.substring(0, 5) + \"...\" + address.substring(address.length - 3)\r\n  );\r\n};\r\n\r\nexport const formatRaffleCardTitle = (title: String): String => {\r\n  if (title.length <= 24)\r\n    return title;\r\n  else\r\n    return title.substring(0, 24) + \" ...\";\r\n};\r\n","import \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport \"./index.scss\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\n// import XImage from \"assets/images/common/X.png\";\r\n\r\n// ================================================\r\n\r\nconst RaijinsModal = ({\r\n  children,\r\n  open,\r\n  setOpen,\r\n  onOpenModal,\r\n  onCloseModal,\r\n  classes,\r\n}) => {\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={onCloseModal}\r\n      center\r\n      classNames={{ modal: `raijins-modal ${classes}` }}\r\n    >\r\n      <button onClick={onCloseModal} className=\"shut-btn\">\r\n        {/* <img src={XImage} alt=\"X.png\" /> */}\r\n        <AiOutlineClose />\r\n      </button>\r\n      {children}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RaijinsModal;\r\n","import cx from \"classnames\";\r\nimport { FaPlus, FaMinus } from \"react-icons/fa\";\r\nimport \"./index.scss\";\r\n\r\n// ================================================\r\n\r\nconst SetNumComp = ({ onIncreaseBtn, onDecreaseBtn, num, classes }) => {\r\n  return (\r\n    <div className={cx(\"set-num-container\", classes)}>\r\n      <button onClick={onDecreaseBtn} disabled={!num}>\r\n        <FaMinus />\r\n      </button>\r\n      <div className={cx(\"num\")}>{num}</div>\r\n      <button onClick={onIncreaseBtn}>\r\n        <FaPlus />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetNumComp;\r\n","import Raffle0 from \"assets/images/raffle/Raffle0.png\";\r\nimport Raffle1 from \"assets/images/raffle/Raffle1.png\";\r\nimport Raffle2 from \"assets/images/raffle/Raffle2.png\";\r\nimport Raffle3 from \"assets/images/raffle/Raffle3.png\";\r\nimport Raffle4 from \"assets/images/raffle/Raffle4.png\";\r\nimport Raffle5 from \"assets/images/raffle/Raffle5.png\";\r\nimport Raffle6 from \"assets/images/raffle/Raffle6.png\";\r\nimport Raffle7 from \"assets/images/raffle/Raffle7.png\";\r\nimport Raffle8 from \"assets/images/raffle/Raffle8.png\";\r\nimport Raffle9 from \"assets/images/raffle/Raffle9.png\";\r\nimport Raffle10 from \"assets/images/raffle/Raffle10.png\";\r\nimport Raffle11 from \"assets/images/raffle/Raffle11.png\";\r\nimport Raffle12 from \"assets/images/raffle/Raffle12.png\";\r\nimport Raffle13 from \"assets/images/raffle/Raffle13.png\";\r\nimport Raffle14 from \"assets/images/raffle/Raffle14.png\";\r\nimport Raffle15 from \"assets/images/raffle/Raffle15.png\";\r\nimport Raffle16 from \"assets/images/raffle/Raffle16.png\";\r\nimport Raffle17 from \"assets/images/raffle/Raffle17.png\";\r\nimport Raffle18 from \"assets/images/raffle/Raffle18.png\";\r\nimport Raffle19 from \"assets/images/raffle/Raffle19.png\";\r\nimport Raffle20 from \"assets/images/raffle/Raffle20.png\";\r\n\r\n\r\nexport const Raijins_RAFFLES = [\r\n    {\r\n      id: 0,\r\n      image: Raffle0,\r\n      title: \"MATIC GOLD CHEST\",\r\n    },\r\n    {\r\n      id: 1,\r\n      image: Raffle1,\r\n      title: \"MATIC SILVER CHEST\",\r\n    },\r\n    {\r\n      id: 2,\r\n      image: Raffle2,\r\n      title: \"MATIC BRONZE CHEST\",\r\n    },\r\n    {\r\n      id: 3,\r\n      image: Raffle3,\r\n      title: \"Raijins TICKETS - RANDOM BOX\",\r\n    },\r\n    {\r\n      id: 4,\r\n      image: Raffle4,\r\n      title: \"NFTS - other collections\",\r\n    },\r\n    {\r\n      id: 5,\r\n      image: Raffle5,\r\n      title: \"Raijins custom - 1/1 (any collection)\",\r\n    },\r\n    {\r\n      id: 6,\r\n      image: Raffle6,\r\n      title: \"Raijins custom - 1/1 (coloured raijins)\",\r\n    },\r\n    {\r\n      id: 7,\r\n      image: Raffle7,\r\n      title: \"Raijins - Raijins 1 (First Edition)\",\r\n    },\r\n    {\r\n      id: 8,\r\n      image: Raffle8,\r\n      title: \"Raijins - Raijins 1 (Tamahagane Edition)\",\r\n    },\r\n    {\r\n      id: 9,\r\n      image: Raffle9,\r\n      title: \"Raijins - Raijins 1 (Jade Edition)\",\r\n    },\r\n    {\r\n      id: 10,\r\n      image: Raffle10,\r\n      title: \"Raijins - Raijins 1 (Ghost Edition)\",\r\n    },\r\n    {\r\n      id: 11,\r\n      image: Raffle11,\r\n      title: \"Raijins - Raijins 2 (First Edition)\",\r\n    },\r\n    {\r\n      id: 12,\r\n      image: Raffle12,\r\n      title: \"Raijins - Raijins 2 (Tamahagane Edition)\",\r\n    },\r\n    {\r\n      id: 13,\r\n      image: Raffle13,\r\n      title: \"Raijins - Raijins 2 (Jade Edition)\",\r\n    },\r\n    {\r\n      id: 14,\r\n      image: Raffle14,\r\n      title: \"Raijins - Raijins 2 (Ghost Edition)\",\r\n    },\r\n    {\r\n      id: 15,\r\n      image: Raffle15,\r\n      title: \"Raijins - Raijins 3 (First Edition)\",\r\n    },\r\n    {\r\n      id: 16,\r\n      image: Raffle16,\r\n      title: \"Raijins - Raijins 3 (Tamahagane Edition)\",\r\n    },\r\n    {\r\n      id: 17,\r\n      image: Raffle17,\r\n      title: \"Raijins - Raijins 3 (Jade Edition)\",\r\n    },\r\n    {\r\n      id: 18,\r\n      image: Raffle18,\r\n      title: \"Raijins - Raijins 3 (Ghost Edition)\",\r\n    },\r\n    {\r\n      id: 19,\r\n      image: Raffle19,\r\n      title: \"Raijins - Raijins NFT\",\r\n    },\r\n    {\r\n      id: 20,\r\n      image: Raffle20,\r\n      title: \"Raijins - Raijins NFT\",\r\n    }\r\n  ];","import Select from \"react-select\";\r\n\r\nconst customStyles = {\r\n  container: (provided) => ({\r\n    ...provided,\r\n    boxShadow: \"0px 0px 3px rgba(255, 255, 255)\",\r\n    fontFamily: \"poppins\",\r\n    // borderRadius: \"25px\",\r\n  }),\r\n  control: (provided) => ({\r\n    ...provided,\r\n    backgroundColor: \"#111111\",\r\n    // boxShadow: \"0px 0px 3px rgba(255, 255, 255)\",\r\n    // borderRadius: \"25px\",\r\n    padding: \"0.5rem\",\r\n    border: \"none\",\r\n  }),\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    borderRadius: \"10px\",\r\n    backgroundColor: state.isFocused ? \"#222222\" : \"#111111\",\r\n    fontFamily: \"poppins\",\r\n  }),\r\n  singleValue: (provided, state) => ({\r\n    ...provided,\r\n    color: \"#bbbbbb\",\r\n  }),\r\n  noOptionsMessage: (provided, state) => ({\r\n    ...provided,\r\n    backgroundColor: \"#111111\",\r\n  }),\r\n  menu: (provided, state) => ({\r\n    ...provided,\r\n    backgroundColor: \"#111111\",\r\n    borderRadius: \"10px\",\r\n    // boxShadow: \"0px 0px 1.8px rgba(214, 214, 214, 0.12)\",\r\n  }),\r\n  input: (provided, state) => ({\r\n    ...provided,\r\n    color: \"#bbbbbb\",\r\n  }),\r\n};\r\n\r\nconst Combobox = ({ options, value, onChange }) => (\r\n  <Select\r\n    options={options}\r\n    styles={customStyles}\r\n    value={value}\r\n    onChange={onChange}\r\n  />\r\n);\r\n\r\nexport default Combobox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport RaffleCard from \"../RaffleCard\";\r\nimport cx from \"classnames\";\r\nimport Combobox from '../Combobox/Combobox';\r\n\r\n// ================================================\r\nconst RAFFLE_OPTIONS = [\r\n  { value: 0, label: 'ACTIVE RAFFLES' },\r\n  { value: 1, label: 'RECENT RAFFLES' },\r\n]\r\n\r\nconst ActiveRaffles = ({\r\n  activeRaffles,\r\n  isWalletConnected,\r\n  connectWallet,\r\n  onBuyRaffleBtn,\r\n}) => {\r\n\r\n  const regInputForCollectionId = React.useRef();\r\n  const [selectedCollection, setSelectedCollection] = useState(RAFFLE_OPTIONS[0]);\r\n  const liveRaffles = activeRaffles.filter((item) => !item.ended);\r\n  const recentRaffles = activeRaffles.filter((item) => item.ended)\r\n\r\n  useEffect(() => {\r\n\r\n  }, [selectedCollection]);\r\n\r\n  return (\r\n    <div className=\"active-raffles\">\r\n      <div className=\"active-raffles-combo\">\r\n        <Combobox ref={regInputForCollectionId} options={RAFFLE_OPTIONS} value={selectedCollection} onChange={(selectedOption) => setSelectedCollection(selectedOption)} />\r\n      </div>\r\n      <h4\r\n        className={cx(\"active-raffles-title\", \"italic\", \"text-primary\", \"mb-2\")}\r\n      >\r\n        {\r\n          selectedCollection.value === 0 ? \r\n            !liveRaffles.length ? <p className=\"text-center text-danger\">No active raffles</p> : null\r\n          :\r\n            !recentRaffles.length ? <p className=\"text-center text-danger\">No recent raffles</p> : null\r\n        }\r\n      </h4>\r\n      <div className={cx(\"cards-row\")}>\r\n        {(selectedCollection.value === 0 ? liveRaffles : recentRaffles).map(\r\n          (raffle) => (\r\n            <RaffleCard\r\n              raffle={raffle}\r\n              key={raffle.id}\r\n              isWalletConnected={isWalletConnected}\r\n              connectWallet={connectWallet}\r\n              onActionBtn={onBuyRaffleBtn}\r\n            />\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActiveRaffles;\r\n","import Description from \"components/Description\";\r\nimport PageTitle from \"components/PageTitle\";\r\n// import { toggleConnect } from \"lib/store/walletSlice\";\r\nimport RoundButton from \"../RoundButton\";\r\nimport cx from \"classnames\";\r\nimport OwnedRaijinsTicketsComp from \"../OwnedRaijinsTicketsComp\";\r\n\r\n// ================================================\r\n\r\nconst Hero = (props) => {\r\n  const { isWalletConnected, connectWallet, raijinsTicketBalance, isMobile } =\r\n    props;\r\n\r\n  return (\r\n    <div className={cx(\"mb-4\")}>\r\n      <PageTitle classes={cx(\"mb-3\")}>\r\n        active <span>raffles</span>\r\n      </PageTitle>\r\n      <Description classes={cx(\"text-center\")}>\r\n        Here are the currently active raffles.\r\n      </Description>\r\n      <Description classes={cx(\"text-center mb-3\")}>\r\n        Try your luck and win your prizes!\r\n      </Description>\r\n      {isWalletConnected ? (\r\n        <div\r\n          className={cx(\"d-flex\", isMobile ? \"justify-center\" : \"justify-end\")}\r\n        >\r\n          {/* <OwnedRaijinsTicketsComp\r\n            raijinsTicketBalance={raijinsTicketBalance}\r\n            variant=\"dark\"\r\n          /> */}\r\n        </div>\r\n      ) : (\r\n        <div className={cx(\"d-flex\", \"justify-center\")}>\r\n          <RoundButton\r\n            text=\"connect wallet\"\r\n            variant=\"primary\"\r\n            // classes={isMobile ? \"w-80\" : \"w-60\"}\r\n            onBtnClick={connectWallet}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import cx from \"classnames\";\r\n\r\n// ================================================\r\n\r\nconst RafflesContainer = ({ children }) => {\r\n  return <div className={cx(\"raffles-container\")}>{children}</div>;\r\n};\r\n\r\nexport default RafflesContainer;\r\n","import cx from \"classnames\";\r\nimport RaijinsModal from \"../RaijinsModal\";\r\nimport RoundButton from \"../RoundButton\";\r\nimport SetNumComp from \"../SetNumComp\";\r\nimport OwnedRaijinsTicketsComp from \"../OwnedRaijinsTicketsComp\";\r\nimport { Raijins_RAFFLES } from \"config/raffles\"\r\n\r\n// ================================================\r\n\r\nconst BuyRafflesModal = ({\r\n  openModal,\r\n  setOpenModal,\r\n  onDecreaseBuyNumBtn,\r\n  onIncreaseBuyNumBtn,\r\n  onCloseModal,\r\n  raijinsTicketsNum,\r\n  raffleIndex,\r\n  raijinsTicketBalance,\r\n  getTextForBtn,\r\n  onUseRaijinsTicketsBtn,\r\n  isMobile,\r\n}) => {\r\n  return (\r\n    <RaijinsModal\r\n      open={openModal}\r\n      setOpen={setOpenModal}\r\n      onCloseModal={onCloseModal}\r\n      classes=\"buy-raffles-modal\"\r\n    >\r\n      <div className={cx(\"d-flex\", \"justify-center\", isMobile ? \"flex-column\" : \"\", \"align-center\", \"gap-1\")}>\r\n        <img\r\n          src={Raijins_RAFFLES[raffleIndex].image}\r\n          alt=\"RaffleLion.png\"\r\n          width={isMobile ? 200 : 300}\r\n        />\r\n        <div className={cx(\"\")}>\r\n          <OwnedRaijinsTicketsComp\r\n            variant=\"light\"\r\n            raijinsTicketBalance={raijinsTicketBalance}\r\n            classes=\"border-none\"\r\n          />\r\n          <p className={cx(\" uppercase\", \"desc\")}>\r\n            choose the number of Raijins tickets you want to use\r\n          </p>\r\n          <SetNumComp\r\n            onDecreaseBtn={onDecreaseBuyNumBtn}\r\n            onIncreaseBtn={onIncreaseBuyNumBtn}\r\n            num={raijinsTicketsNum}\r\n            classes=\"mb-2 mt-2\"\r\n          />\r\n          <div className=\"text-center\">\r\n            <RoundButton\r\n              variant=\"primary\"\r\n              text={getTextForBtn()}\r\n              onBtnClick={onUseRaijinsTicketsBtn}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <p className={cx(\"text-center\", \" uppercase\", \"mb-3\", \"desc\")}>\r\n        choose the number of Raijins tickets you want to use\r\n      </p>\r\n      <SetNumComp\r\n        onDecreaseBtn={onDecreaseBuyNumBtn}\r\n        onIncreaseBtn={onIncreaseBuyNumBtn}\r\n        num={raijinsTicketsNum}\r\n        classes=\"mb-2\"\r\n      />\r\n      <div className=\"text-center mb-6\">\r\n        <RoundButton\r\n          variant=\"primary\"\r\n          text={getTextForBtn()}\r\n          onBtnClick={onUseRaijinsTicketsBtn}\r\n        />\r\n      </div> */}\r\n      \r\n    </RaijinsModal>\r\n  );\r\n};\r\n\r\nexport default BuyRafflesModal;\r\n","import cx from \"classnames\";\r\nimport RaijinsModal from \"../RaijinsModal\";\r\nimport KYORotateImage from \"assets/images/common/KYORotate.gif\";\r\nimport DangerKeepOutImage from \"assets/images/earn/DangerKeepOut.png\";\r\n\r\nconst BuyRafflesWaitingModal = ({\r\n  openModal,\r\n  setOpenModal,\r\n  onCloseModal,\r\n  isMobile,\r\n}) => {\r\n  return (\r\n    <RaijinsModal\r\n      open={openModal}\r\n      setOpen={setOpenModal}\r\n      onCloseModal={onCloseModal}\r\n      classes=\"buy-raffles-waiting-modal\"\r\n    >\r\n      <div className={cx(\"text-center\", \"mb-3\")}>\r\n        <img\r\n          src={KYORotateImage}\r\n          alt=\"KYORotate.gif\"\r\n          width={isMobile ? 150 : 200}\r\n        />\r\n      </div>\r\n      <h4 className={cx(\"title\", \"uppercase\", \"italic\", \"text-center\", \"mb-3\")}>\r\n        raffle entry\r\n      </h4>\r\n      <p\r\n        className={cx(\r\n          \"uppercase\",\r\n          \"italic\",\r\n          \"text-danger\",\r\n          \"mb-3\",\r\n          \"desc\",\r\n          \"font-yokomoji\",\r\n          \"text-center\"\r\n        )}\r\n      >\r\n        your raffle entry is being processed...\r\n      </p>\r\n      <div className={cx(\"text-center\", \"mb-3\")}>\r\n        <img src={DangerKeepOutImage} alt=\"danger-keep-out.png\" width={50} />\r\n      </div>\r\n      <p className={cx(\"uppercase\", \"italic\", \"text-danger\", \"mb-3\", \"font-yokomoji\", \"desc\")}>\r\n        waiting for wallet transaction confirmation\r\n      </p>\r\n    </RaijinsModal>\r\n  );\r\n};\r\n\r\nexport default BuyRafflesWaitingModal;\r\n","import cx from \"classnames\";\r\nimport RaijinsModal from \"../RaijinsModal\";\r\nimport { Raijins_RAFFLES } from \"config/raffles\"\r\nimport RoundButton from \"../RoundButton\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BuyRafflesCheckModal = ({\r\n  openModal,\r\n  setOpenModal,\r\n  onCloseModal,\r\n  raijinsTicketsNum,\r\n  raffleIndex,\r\n  isMobile,\r\n}) => {\r\n\r\n  return (\r\n    <RaijinsModal\r\n      open={openModal}\r\n      setOpen={setOpenModal}\r\n      onCloseModal={onCloseModal}\r\n      classes=\"buy-check-modal\"\r\n    >\r\n      <div className={cx(\"text-center\", \"mb-3\")}>\r\n        <img\r\n          src={Raijins_RAFFLES[raffleIndex].image}\r\n          alt=\"RaffleLion.png\"\r\n          width={isMobile ? 200 : 300}\r\n        />\r\n      </div>\r\n      <h4 className={cx(\"text-center\", \"title\", \"uppercase\", \"font-yokomoji\", \"mb-5\")}>\r\n        you used <span>{raijinsTicketsNum} raijins tickets</span> !\r\n      </h4>\r\n      <p className={cx(\"desc\", \"uppercase\", \"text-center\", \"font-yokomoji\", \"italic\", \"mb-3\")}>\r\n        congratulations, your raffle entry has been successfully registered\r\n      </p>\r\n      <div className={cx(\"text-center\")}>\r\n        <Link to=\"/dashboard\" className=\"round-btn danger\">\r\n          check your activities\r\n        </Link>\r\n      </div>\r\n    </RaijinsModal>\r\n  );\r\n};\r\n\r\nexport default BuyRafflesCheckModal;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { ethers } from \"ethers\";\r\nimport useSWR from \"swr\";\r\n\r\nimport Layout from \"components/Layout\";\r\nimport ActiveRaffles from \"components/Raffles/ActiveRaffles\";\r\nimport Hero from \"components/Raffles/Hero\";\r\nimport RafflesContainer from \"components/Raffles/RafflesContainer\";\r\nimport { useMediaQuery } from \"@uidotdev/usehooks\";\r\nimport \"./index.scss\";\r\n\r\nimport BuyRafflesModal from \"components/Raffles/BuyRafflesModal\";\r\nimport BuyRafflesWaitingModal from \"components/Raffles/BuyRafflesWaitingModal\";\r\nimport BuyRafflesCheckModal from \"components/Raffles/BuyRafflesCheckModal\";\r\n\r\nimport { useChainId } from \"lib/chains\";\r\nimport RaijinsTicket from \"abis/RaijinsTicket.json\";\r\nimport RaffleRaijins from \"abis/RaffleRaijins.json\";\r\nimport { getContract } from \"config/contracts\";\r\nimport { Raijins_RAFFLES } from \"config/raffles\";\r\nimport { callContract, contractFetcher } from \"lib/contracts\";\r\nimport { approveTokens } from \"lib/approveTokens\";\r\nimport {\r\n  formatAmount,\r\n} from \"lib/numbers\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n//----------------------------------------------------------------------//\r\nconst { AddressZero } = ethers.constants;\r\n\r\nconst loadActiveRaffles = (dataContract, period, waitingPeriod) => {\r\n  if (dataContract === undefined) return [];\r\n  if (dataContract.length === 0) return [];\r\n\r\n  if (period === undefined || period === 0) return [];\r\n  if (waitingPeriod === undefined || waitingPeriod === 0) return [];\r\n\r\n  const ret = dataContract.map((item, index) => {\r\n    if (item.isDisabled) return null;\r\n\r\n    const raffleInfo = Raijins_RAFFLES[index];\r\n    let winningRate1x = 1 / (parseInt(item.totalTicketCnt.toString()) + 1) * 100;\r\n\r\n    let winningRate = 0;\r\n    if (parseInt(item.totalTicketCnt.toString()) === 0\r\n     || parseInt(item.ticketCntForUser.toString()) === 0) \r\n      winningRate = 0;\r\n    else {\r\n      winningRate =\r\n        (parseInt(item.ticketCntForUser.toString()) / parseInt(item.totalTicketCnt.toString())) * 100;\r\n    }\r\n\r\n    let days = 0;\r\n    let hours = 0;\r\n    let minutes = 0;\r\n    const currentTime = new Date().getTime() / 1000;\r\n    const endTime =\r\n      parseInt(item.timeStarted.toString()) + parseInt(period.toString());\r\n\r\n    let isEnded = false;\r\n    if (currentTime >= endTime || item.isDecided)\r\n      isEnded = true;\r\n    else if (currentTime < endTime) {\r\n      const timeToEnd = endTime - currentTime;\r\n      days = Math.floor(timeToEnd / (60 * 60 * 24));\r\n      hours = Math.floor((timeToEnd % (60 * 60 * 24)) / (60 * 60));\r\n      minutes = Math.floor((timeToEnd % (60 * 60)) / 60);\r\n    }\r\n\r\n    let daysNext = 0;\r\n    let hoursNext = 0;\r\n    let minutesNext = 0;\r\n    if (item.isDecided) {\r\n      const nextRaffleTime = parseInt(item.timeDecided.toString()) + parseInt(waitingPeriod.toString());\r\n      const timeToNextRaffle = nextRaffleTime - currentTime;\r\n      if (currentTime < nextRaffleTime) {\r\n        daysNext = Math.floor(timeToNextRaffle / (60 * 60 * 24));\r\n        hoursNext = Math.floor((timeToNextRaffle % (60 * 60 * 24)) / (60 * 60));\r\n        minutesNext = Math.floor((timeToNextRaffle % (60 * 60)) / 60);\r\n      }\r\n    }\r\n\r\n    return {\r\n      id: raffleInfo.id,\r\n      image: raffleInfo.image,\r\n      title: raffleInfo.title,\r\n      value: item.value,\r\n      winningRate1x: winningRate1x.toFixed(0),\r\n      winningRate: winningRate.toFixed(0),\r\n      winner: item.winner,\r\n      ended: isEnded,\r\n      decided: item.isDecided,\r\n      remainingTime: {\r\n        days: days,\r\n        hours: hours,\r\n        minutes: minutes,\r\n      },\r\n      remainingTimeNextRaffle: {\r\n        days: daysNext,\r\n        hours: hoursNext,\r\n        minutes: minutesNext,\r\n      }\r\n    };\r\n  });\r\n\r\n  const finalArray = ret.filter((item) => item !== null);\r\n  return finalArray;\r\n};\r\n\r\nconst Raffles = (props) => {\r\n  const { connectWallet, setPendingTxns } = props;\r\n  const isMobile = useMediaQuery(\"only screen and (max-width: 640px)\");\r\n\r\n  const { pathname } = useLocation();\r\n  const { active, library, account } = useWeb3React();\r\n  const { chainId } = useChainId();\r\n\r\n  const ticketAddress = getContract(chainId, \"RaijinsTicket\");\r\n  const raffleAddress = getContract(chainId, \"RaffleRaijins\");\r\n\r\n  const { data: ticketBalance } = useSWR(\r\n    true &&\r\n    ticketAddress && [true, chainId, ticketAddress, \"balanceOf\", active ? account : AddressZero],\r\n    { fetcher: contractFetcher(library, RaijinsTicket) }\r\n  );\r\n\r\n  const { data: period } = useSWR(\r\n    true && raffleAddress && [true, chainId, raffleAddress, \"period\"],\r\n    { fetcher: contractFetcher(library, RaffleRaijins) }\r\n  );\r\n\r\n  const { data: waitingPeriod } = useSWR(\r\n    true && raffleAddress && [true, chainId, raffleAddress, \"waitingPeriod\"],\r\n    { fetcher: contractFetcher(library, RaffleRaijins) }\r\n  );\r\n\r\n  const { data: dataContract } = useSWR(\r\n    true &&\r\n    raffleAddress && [\r\n      true,\r\n      chainId,\r\n      raffleAddress,\r\n      \"getRaffleInfo\",\r\n      active ? account : AddressZero,\r\n    ],\r\n    { fetcher: contractFetcher(library, RaffleRaijins) }\r\n  );\r\n  let activeRaffles = loadActiveRaffles(dataContract, period, waitingPeriod);\r\n\r\n  const { data: approvedAmount } = useSWR(\r\n    active &&\r\n    ticketAddress && [\r\n      active,\r\n      chainId,\r\n      ticketAddress,\r\n      \"allowance\",\r\n      account,\r\n      raffleAddress,\r\n    ],\r\n    { fetcher: contractFetcher(library, RaijinsTicket) }\r\n  );\r\n\r\n  const [isApproving, setIsApproving] = useState(false);\r\n  const [isWaitingForApproval, setIsWaitingForApproval] = useState(false);\r\n  const [openBuyModal, setOpenBuyModal] = useState(false);\r\n  const [raijinsTicketsNum, setRaijinsTicketsNum] = useState(1);\r\n  const [raffleIndex, setRaffleIndex] = useState(0);\r\n  const [openBuyWaitingModal, setOpenBuyWaitingModal] = useState(false);\r\n  const [openBuyCheckModal, setOpenBuyCheckModal] = useState(false);\r\n\r\n  const needApproval = raijinsTicketsNum > parseInt(formatAmount(approvedAmount, 18));\r\n\r\n  const onIncreaseBuyNumBtn = () => {\r\n    const max = parseInt(formatAmount(ticketBalance, 18, 0));\r\n    if (max === 0) {\r\n      setRaijinsTicketsNum(0);\r\n      return;\r\n    }\r\n    if (raijinsTicketsNum === max) return;\r\n    setRaijinsTicketsNum((prevBuyNum) => prevBuyNum + 1);\r\n  };\r\n\r\n  const onDecreaseBuyNumBtn = () => {\r\n    const max = parseInt(formatAmount(ticketBalance, 18, 0));\r\n    if (max === 0) {\r\n      setRaijinsTicketsNum(0);\r\n      return;\r\n    }\r\n    if (raijinsTicketsNum === 1) return;\r\n    setRaijinsTicketsNum((prevBuyNum) => prevBuyNum - 1);\r\n  };\r\n\r\n  const getTextForBtn = () => {\r\n    if (needApproval && isWaitingForApproval) {\r\n      return \"Waiting for Approval...\";\r\n    }\r\n    if (isApproving) {\r\n      return \"Approving\";\r\n    }\r\n    if (needApproval) {\r\n      return \"Approve\";\r\n    }\r\n\r\n    return \"use raijins tickets\";\r\n  };\r\n\r\n  const onBuyRaffleBtn = (raffleIndex) => {\r\n    const max = parseInt(formatAmount(ticketBalance, 18, 0));\r\n    if (max === 0)\r\n      setRaijinsTicketsNum(0);\r\n    else\r\n      setRaijinsTicketsNum(1);\r\n    setRaffleIndex(raffleIndex);\r\n    setOpenBuyModal(true);\r\n  };\r\n\r\n  const approveRaijinsTicket = () => {\r\n    if (needApproval) {\r\n      approveTokens({\r\n        setIsApproving,\r\n        library,\r\n        tokenAddress: ticketAddress,\r\n        spender: raffleAddress,\r\n        chainId: chainId,\r\n        onApproveSubmitted: () => {\r\n          setIsWaitingForApproval(true);\r\n        },\r\n      });\r\n\r\n      return;\r\n    }\r\n  }\r\n\r\n  const onUseRaijinsTicketsBtn = () => {\r\n    if (needApproval) {\r\n      approveRaijinsTicket();\r\n      return;\r\n    }\r\n\r\n    setOpenBuyModal(false);\r\n\r\n    const contract = new ethers.Contract(\r\n      raffleAddress,\r\n      RaffleRaijins,\r\n      library.getSigner()\r\n    );\r\n    callContract(chainId, contract, \"addTicket\", [raffleIndex, raijinsTicketsNum], {\r\n      setOpenActModal: setOpenBuyWaitingModal,\r\n      setOpenActedModal: setOpenBuyCheckModal,\r\n      setPendingTxns,\r\n    })\r\n      .then(async (res) => { })\r\n      .finally(() => { });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (needApproval) setIsWaitingForApproval(false);\r\n  }, [needApproval, active]);\r\n\r\n  useEffect(() => {\r\n    // \"document.documentElement.scrollTo\" is the magic for React Router Dom v6\r\n    document.documentElement.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"instant\", // Optional if you want to skip the scrolling animation\r\n    });\r\n  }, [pathname]);\r\n\r\n  // useEffect(() => {\r\n  //   if (raijinsTicketsNum > parseInt(formatAmount(approvedAmount, 18)))\r\n  //     setNeedApproval(true);\r\n  //   else\r\n  //     setNeedApproval(false);\r\n  // }, [raijinsTicketsNum]);\r\n\r\n  return (\r\n    <Layout>\r\n      <RafflesContainer>\r\n        <Hero\r\n          isWalletConnected={active}\r\n          connectWallet={connectWallet}\r\n          raijinsTicketBalance={formatAmount(ticketBalance, 18, 0)}\r\n          isMobile={isMobile}\r\n        />\r\n        <ActiveRaffles\r\n          activeRaffles={activeRaffles}\r\n          isWalletConnected={active}\r\n          connectWallet={connectWallet}\r\n          onBuyRaffleBtn={onBuyRaffleBtn}\r\n        />\r\n        <BuyRafflesModal\r\n          openModal={openBuyModal}\r\n          setOpenModal={setOpenBuyModal}\r\n          onCloseModal={() => setOpenBuyModal(false)}\r\n          raijinsTicketsNum={raijinsTicketsNum}\r\n          raffleIndex={raffleIndex}\r\n          raijinsTicketBalance={formatAmount(ticketBalance, 18, 0)}\r\n          onIncreaseBuyNumBtn={onIncreaseBuyNumBtn}\r\n          onDecreaseBuyNumBtn={onDecreaseBuyNumBtn}\r\n          getTextForBtn={getTextForBtn}\r\n          onUseRaijinsTicketsBtn={onUseRaijinsTicketsBtn}\r\n          isMobile={isMobile}\r\n        />\r\n        <BuyRafflesWaitingModal\r\n          openModal={openBuyWaitingModal}\r\n          setOpenModal={setOpenBuyWaitingModal}\r\n          onCloseModal={() => setOpenBuyWaitingModal(false)}\r\n          isMobile={isMobile}\r\n        />\r\n        <BuyRafflesCheckModal\r\n          openModal={openBuyCheckModal}\r\n          setOpenModal={setOpenBuyCheckModal}\r\n          onCloseModal={() => setOpenBuyCheckModal(false)}\r\n          raijinsTicketsNum={raijinsTicketsNum}\r\n          raffleIndex={raffleIndex}\r\n          isMobile={isMobile}\r\n        />\r\n      </RafflesContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Raffles;\r\n","import { ethers } from \"ethers\";\r\nimport Token from \"abis/RaijinsTicket.json\";\r\nimport { getExplorerUrl } from \"config/chains\";\r\nimport { helperToast } from \"lib/helperToast\";\r\nimport { Web3ReactContextInterface } from \"@web3-react/core/dist/types\";\r\nimport ExternalLink from \"components/ExternalLink/ExternalLink\";\r\n\r\ntype Params = {\r\n  setIsApproving: (val: boolean) => void;\r\n  library: Web3ReactContextInterface[\"library\"];\r\n  tokenAddress: string;\r\n  spender: string;\r\n  chainId: number;\r\n  onApproveSubmitted: () => void;\r\n  pendingTxns: any[];\r\n  setPendingTxns: (txns: any[]) => void;\r\n  includeMessage?: boolean;\r\n};\r\n\r\nexport function approveTokens({\r\n  setIsApproving,\r\n  library,\r\n  tokenAddress,\r\n  spender,\r\n  chainId,\r\n  onApproveSubmitted,\r\n  pendingTxns,\r\n  setPendingTxns,\r\n  includeMessage,\r\n}: Params) {\r\n  setIsApproving(true);\r\n  const contract = new ethers.Contract(tokenAddress, Token, library.getSigner());\r\n  contract\r\n    .approve(spender, ethers.constants.MaxUint256)\r\n    .then(async (res) => {\r\n      const txUrl = getExplorerUrl(chainId) + \"tx/\" + res.hash;\r\n      helperToast.success(\r\n        <div>\r\n          Approval submitted! <ExternalLink href={txUrl}>View status.</ExternalLink>\r\n          <br />\r\n        </div>\r\n      );\r\n      if (onApproveSubmitted) {\r\n        onApproveSubmitted();\r\n      }\r\n      if (pendingTxns && setPendingTxns) {\r\n        const pendingTxn = {\r\n          hash: res.hash,\r\n          message: includeMessage ? `Raijins Ticket Approved!` : false,\r\n        };\r\n        setPendingTxns([...pendingTxns, pendingTxn]);\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.error(e);\r\n      let failMsg;\r\n      if (\r\n        [\"not enough funds for gas\", \"failed to execute call with revert code InsufficientGasFunds\"].includes(\r\n          e.data?.message\r\n        )\r\n      ) {\r\n        failMsg = (\r\n          <div>\r\n            There is not enough MATIC in your account on Polygon to send this transaction.\r\n            <br />\r\n            <br />\r\n            <ExternalLink href=\"https://www.mexc.com/\">Bridge MATIC to Polygon</ExternalLink>\r\n          </div>\r\n        );\r\n      } else if (e.message?.includes(\"User denied transaction signature\")) {\r\n        failMsg = `Approval was cancelled`;\r\n      } else {\r\n        failMsg = `Approval failed`;\r\n      }\r\n      helperToast.error(failMsg);\r\n    })\r\n    .finally(() => {\r\n      setIsApproving(false);\r\n    });\r\n}\r\n"],"names":["_ref","raijinsTicketBalance","variant","classes","_jsx","className","cx","children","_jsxs","text","CopyToClipboard","onCopy","helperToast","success","src","alt","width","raffle","isWalletConnected","connectWallet","onActionBtn","isTopRaffles","formattedAddress","useMemo","address","winner","substring","length","concat","image","title","value","ended","_Fragment","decided","CopyBtn","remainingTimeNextRaffle","days","hours","minutes","winningRate1x","winningRate","remainingTime","Link","to","RoundButton","onBtnClick","id","open","onCloseModal","setOpen","onOpenModal","Modal","onClose","center","classNames","modal","onClick","AiOutlineClose","onIncreaseBtn","onDecreaseBtn","num","disabled","FaMinus","FaPlus","Raijins_RAFFLES","customStyles","container","provided","_objectSpread","boxShadow","fontFamily","control","backgroundColor","padding","border","option","state","borderRadius","isFocused","singleValue","color","noOptionsMessage","menu","input","options","onChange","Select","styles","RAFFLE_OPTIONS","label","activeRaffles","onBuyRaffleBtn","regInputForCollectionId","React","_useState","useState","_useState2","_slicedToArray","selectedCollection","setSelectedCollection","liveRaffles","filter","item","recentRaffles","useEffect","Combobox","ref","selectedOption","map","RaffleCard","props","isMobile","PageTitle","Description","openModal","setOpenModal","onDecreaseBuyNumBtn","onIncreaseBuyNumBtn","raijinsTicketsNum","raffleIndex","getTextForBtn","onUseRaijinsTicketsBtn","RaijinsModal","OwnedRaijinsTicketsComp","SetNumComp","KYORotateImage","DangerKeepOutImage","AddressZero","ethers","setPendingTxns","useMediaQuery","pathname","useLocation","_useWeb3React","useWeb3React","active","library","account","chainId","useChainId","ticketAddress","getContract","raffleAddress","ticketBalance","useSWR","fetcher","contractFetcher","RaijinsTicket","data","period","RaffleRaijins","waitingPeriod","dataContract","undefined","index","isDisabled","raffleInfo","parseInt","totalTicketCnt","toString","ticketCntForUser","currentTime","Date","getTime","endTime","timeStarted","isEnded","isDecided","timeToEnd","Math","floor","daysNext","hoursNext","minutesNext","nextRaffleTime","timeDecided","timeToNextRaffle","toFixed","loadActiveRaffles","approvedAmount","isApproving","setIsApproving","_useState3","_useState4","isWaitingForApproval","setIsWaitingForApproval","_useState5","_useState6","openBuyModal","setOpenBuyModal","_useState7","_useState8","setRaijinsTicketsNum","_useState9","_useState10","setRaffleIndex","_useState11","_useState12","openBuyWaitingModal","setOpenBuyWaitingModal","_useState13","_useState14","openBuyCheckModal","setOpenBuyCheckModal","needApproval","formatAmount","approveRaijinsTicket","tokenAddress","spender","onApproveSubmitted","pendingTxns","includeMessage","Token","getSigner","approve","then","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","txUrl","pendingTxn","wrap","_context","prev","next","getExplorerUrl","hash","ExternalLink","href","message","_toConsumableArray","stop","_x","apply","arguments","catch","e","_e$data","_e$message","failMsg","console","error","includes","finally","approveTokens","document","documentElement","scrollTo","top","left","behavior","Layout","RafflesContainer","Hero","ActiveRaffles","max","BuyRafflesModal","prevBuyNum","contract","callContract","setOpenActModal","setOpenActedModal","BuyRafflesWaitingModal","BuyRafflesCheckModal"],"sourceRoot":""}